#include <iostream>
#include <ctime>
using namespace std;

class MatrizDinamica {

private:
  int filas;
  int columnas;
  int** matriz;

public:

  MatrizDinamica(int nFilas, int nColumnas) {

    if(nFilas > 0 || nColumnas > 0) {

      filas = nFilas;
      columnas = nColumnas;
      matriz = new int*[filas];
      for (int i = 0; i < filas; i++) {
	matriz[i] = new int[columnas];
      }

      for (int i = 0; i < filas; i++) {
	for(int j = 0; j < columnas; j++)
	  matriz[i][j] = i+j;
      }
    }
  }

    ~MatrizDinamica() {
      for(int i = 0; i < filas; i++) 
	delete [] matriz[i];

      delete [] matriz;
    }

    void multiplica(const MatrizDinamica &m1, const MatrizDinamica &m2) {

      for(int i = 0; i < this->filas; i++) {
	  for(int j = 0; j < this->columnas; j++) {
	    int suma = 0;

	    for(int k = 0; k < m1.columnas; k++)
	      suma += m1.matriz[i][k] * m2.matriz[k][j];

	     this->matriz[i][j] = suma;
	  } 
       }
     }
};

int main(int nArgs, char *args[]) {

  int n = atoi(args[1]);

  MatrizDinamica m1(n,n);
  MatrizDinamica m2(n,n);

  MatrizDinamica m3(n,n);

  clock_t tini;
  tini = clock();

  m3.multiplica(m1,m2);

  clock_t tfin;
  tfin = clock();

  cout << n << "\t" << (tfin-tini)/(double)CLOCKS_PER_SEC << endl;
}

  

    


    
